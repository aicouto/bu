'use strict'

import { Component } from 'react'
import goot from 'goot'
import spacetime from 'spacetime'

import Post from './../../../layouts/post'
import H2 from './../../../components/h2'
import H3 from './../../../components/h3'
import P from './../../../components/p'
import Bold from './../../../components/bold'
import Image from './../../../components/image'
import Url from './../../../components/url'
import Highlight from './../../../components/highlight'
import GithubEmbed from './../../../components/github-embed'
import posts from './../../../data/posts'

export default class GootHumanizeGreeting extends Component {
  render() {
    const now = spacetime().hour()
    const g = goot(now, 'pt')
    const greeting = g === 'dia' ? `bom ${g}` : `boa ${g}`
    const { url: { pathname } } = this.props
    const p = pathname.substring(9, pathname.length)
    const post = posts.filter(({ id }) => id === p)[0]

    return (
      <Post post={post} url={pathname}>
        <P>
          Hey, <strong>{greeting}</strong>!
        </P>
        <P>
          Assim que o projeto come√ßa. Apenas dizendo{' '}
          <Highlight>bom dia</Highlight>, <Highlight>boa tarde</Highlight> ou{' '}
          <Highlight>boa noite</Highlight> baseado em seu fuso hor√°rio. Se voc√™
          est√° lendo esse post de manh√£, voc√™ ver√° um <Bold>bom dia</Bold> no
          come√ßo, se voc√™ estiver lendo a tarde, voc√™ ver√° um{' '}
          <Bold>boa tarde</Bold> e se voc√™ estiver lendo... okay, voc√™ entendeu!
        </P>
        <P>
          Eu sei que pode soar bobo, √© apenas um m√≥dulo que retona uma{' '}
          <Highlight>string</Highlight>. √â por isso que esse projeto √© um dos
          meus favoritos, porque √© t√£o simples e pode fazer a diferen√ßa para os
          usu√°rio que est√£o vendo isso em seu site.
        </P>
        <P>
          Os pequenos detalhes como um simples bom dia quando est√° de manh√£ para
          seus usu√°rio. Eles podem se sentir mais humanos quando est√£o usando
          seu site e n√£o se sentirem que est√£o conversando com um rob√¥ porque
          tem um pequeno toque humano em um simples bom dia.
        </P>
        <P>
          √â o que n√≥s estamos tentando fazer com a tecnologia. Por exemplo{' '}
          <Highlight>intelig√™ncia artificial</Highlight> como{' '}
          <Highlight>Siri</Highlight>. Apple vem trabalhando bastante com AI
          para fazer o Siri soar mais humano. Ou at√© menos o{' '}
          <Highlight>Google Assistant</Highlight> com uma conversa mais natural.
        </P>
        <H2>De onde veio a ideia?</H2>
        <P>
          Eu estava olhando o <Url href="https://dribbble.com">Dribbble</Url> {' '}
          quando eu vi um redesign do login do Facebook. Eu curti, era simple e
          certo. A imagem tinha uma mensagem de boas vindas{' '}
          <Highlight>Boa tarde! ...</Highlight>. E isso chamou minha aten√ß√£o, eu
          achei que seria legal criar algo para dar boas vindas aos usu√°rios
          baseado no fuso hor√°rio dele. Uma mensagem simples de boas vindas.
        </P>
        <Image
          src={`/static/posts/${post.id}/facebook.png`}
          label="Facebook Redesign [Sign in on Desktop] by Pedro Henrique Marques"
        />
        <H2>Criando goot!</H2>
        <H3>v0.0.1</H3>
        <P>
          No <Highlight>v0.0.1</Highlight> goot era muito mais simple do que √©
          hoje. Era apenas uma fun√ß√£o que retornava uma `string` sem nenhum
          par√¢metro. Goot tentava pegar o hor√°rio certo e retornava uma
          mensagem, estava funcionando bem at√© eu por em um site demo,{' '}
          <Url href="https://github.com/bukinoshita/goot-web">goot-web</Url>.
        </P>
        <P>
          Eu estava tendo problemas para rodar o `goot` com React localmente e
          quando eu colocava em produ√ß√£o onde retornava dois hor√°rios
          diferentes.
        </P>
        <H3>v0.0.2 & v0.0.3</H3>
        <P>
          <Highlight>v0.0.2</Highlight> e <Highlight>v0.0.3</Highlight> foi
          apenas para deixar a API mais est√°vel, arrumar alguns bugs e adicionar
          testes.
        </P>
        <H3>v0.0.4</H3>
        <P>
          No <Highlight>v0.0.4</Highlight> eu adicionei um par√¢metro na fun√ß√£o
          onde o desenvolvedor pode passar o hor√°rio e o goot apenas retorna uma
          mensagem baseado nesse hor√°rio. Apenas para tornar as coisas mais
          f√°ceis e n√£o ficar tentando adivinhar o hor√°rio certo de cada fuso
          hor√°rio.
        </P>
        <H3>v0.0.5</H3>
        <P>
          Esse foi um √≥timo release para mim. Eu adicionei suporte para
          diferentes l√≠nguas como <Bold>portugu√™s</Bold>, <Bold>espanhol</Bold>,{' '}
          <Bold>fran√ß√™s</Bold> e <Bold>alem√£o</Bold>.
        </P>
        <Image
          src={`/static/posts/${post.id}/goot-web.png`}
          label="`goot-web` with different languages support built with React"
        />
        <H3>v0.0.6 & v0.0.7</H3>

        <P>
          No <Highlight>v0.0.6</Highlight> e <Highlight>v0.0.7</Highlight> foram
          apenas para arrumar alguns bugs e melhoramentos. E eu lan√ßei o
          `goot-web` com um design novo e mais simples.
        </P>

        <Image
          src={`/static/posts/${post.id}/cover.png`}
          label="new `goot-web`"
        />

        <H2>O futuro do goot</H2>

        <P>
          Eu vim usando o `goot` em alguns{' '}
          <Url href="https://github.com/bukinoshita/goot#example">
            projetos
          </Url>{' '}
          que eu fiz e funcionou muito bem. Agora o `goot` retorna uma `promise`
          que √© algo que eu n√£o gosto muito, seria muito mais f√°cil se
          retornasse uma `string` j√° que o `goot` n√£o precisa de `promises`.
          Isso sendo dito, no pr√≥ximo release
          <Highlight>v1.0.0</Highlight> (major release) onde eu farei a API mais
          est√°vel e f√°cil de usar. ‚ù§Ô∏è
        </P>

        <P>
          Fa√ßa uma tentativa com goot em seus projetos tamb√©m! √â bem f√°cil de
          usar, c√≥digo{' '}
          <Url href="https://github.com/bukinoshita/goot">aqui</Url>.
        </P>

        <GithubEmbed
          project="bukinoshita/goot"
          description="Goot humazine greetings üëã"
        />
      </Post>
    )
  }
}
